version: '3.8'

services:
  db:
    image: debezium/postgres:13
    restart: always
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - ../config/postgresql/postgresql.conf:/etc/postgresql/postgresql.conf
      - ../data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: <%= @config['database']['user'] %>
      POSTGRES_PASSWORD: <%= @config['database']['password'] %>
    command: "postgres -c config_file=/etc/postgresql/postgresql.conf"

  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: db
      ADMINER_DEFAULT_DB_USER: <%= @config['database']['user'] %>
      ADMINER_DEFAULT_DB_PASSWORD: <%= @config['database']['password'] %>
    labels:
      - "traefik.http.routers.adminer-<%= @name %>.rule=Host(`adminer.<%= @config['app']['domain'] %>`)"
      - "traefik.http.services.adminer-<%= @name %>.loadbalancer.server.port=8080"
      - "traefik.enable=true"
      <%- if @config['ssl']['enabled'] -%>
      - "traefik.http.routers.adminer-<%= @name %>.entrypoints=websecure"
      - "traefik.http.routers.adminer-<%= @name %>.tls=true"
      <%- else -%>
      - "traefik.http.routers.adminer-<%= @name %>.entrypoints=web"
      <%- end -%>

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    volumes:
      - ../data/zookeeper/data:/var/lib/zookeeper/data
      - ../data/zookeeper/log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:7.0.1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - ../data/kafka:/var/lib/kafka/data
    environment:
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9991

  kafka-connect:
    image: confluentinc/cp-kafka-connect:6.2.1
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: kafka-connect
      CONNECT_CONFIG_STORAGE_TOPIC: _connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: _connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: _connect-status
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://kafka-schema-registry:8081'
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_LOG4J_ROOT_LOGLEVEL: "INFO"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
      CONNECT_LOG4J_APPENDER_STDOUT_LAYOUT_CONVERSIONPATTERN: "[%d] %p %X{connector.context}%m (%c:%L)%n"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: /usr/share/java,/connectors,/usr/share/confluent-hub-components/
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry
      - kafka-rest-proxy
      - db
    command:
      - bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:latest
        confluent-hub install --no-prompt debezium/debezium-connector-postgresql:latest
        /etc/confluent/docker/run

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.2
    ports:
      - "9200:9200"
    volumes:
      - ../data/elasticsearch:/usr/share/elasticsearch/data
    environment:
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms1g -Xmx1g"
      discovery.type: "single-node"

  redis:
    image: redis:4.0.10
    restart: always
    volumes:
      - ../data/redis:/data

  influxdb:
    image: influxdb:1.7.8
    restart: always
    environment:
      INFLUXDB_ADMIN_ENABLED: "true"
    volumes:
      - ../config/influxdb/influxdb.sql:/influxdb.sql
      - ../data/influxdb:/var/lib/influxdb

  vault:
    image: vault:1.3.0
    restart: always
    volumes:
      - ../data/vault:/vault/data
      - ../config/vault:/tmp/policies
    command:
      - server
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_LOCAL_CONFIG: '{"storage": {"file": { "path": "/vault/data" }}, "listener": {"tcp":{"address": "0.0.0.0:8200","tls_disable":"1"}}}'
      VAULT_ADDR: http://vault:8200

  kafka-schema-registry:
    image: confluentinc/cp-schema-registry:6.2.1
    ports:
      - "8081:8081"
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      SCHEMA_REGISTRY_HOST_NAME: kafka-schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  kafka-rest-proxy:
    image: confluentinc/cp-kafka-rest:6.2.1
    ports:
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      KAFKA_REST_SCHEMA_REGISTRY_URL: http://kafka-schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
    depends_on:
      - zookeeper
      - kafka
      - kafka-schema-registry

  control-center:
    image: confluentinc/cp-enterprise-control-center:6.0.1
    ports:
      - "9021:9021"
    depends_on:
      - kafka
      - kafka-connect
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:9092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_CONNECT_CLUSTER: http://kafka-connect:8083
      CONTROL_CENTER_KSQL_KSQLDB1_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_KSQL_KSQLDB1_ADVERTISED_URL: "http://ksqldb-server:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://kafka-schema-registry:8081"
      PORT: 9021

  ksqldb-server:
    image: confluentinc/cp-ksqldb-server:6.2.1
    ports:
      - "8088:8088"
    environment:
      KSQL_BOOTSTRAP_SERVERS: PLAINTEXT://kafka:9092
      KSQL_LISTENERS: http://0.0.0.0:8088/
      KSQL_KSQL_SERVICE_ID: ksqldb-server_
    depends_on:
      - zookeeper
      - kafka

  kibana:
    image: docker.elastic.co/kibana/kibana:7.11.2
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch

  kafka-connect-init:
    image: zsmartex/kafka-connect-init
    volumes:
      - ../config/kafka-connect:/app/connectors
    environment:
      - KAFKA_CONNECT_HOST=http://kafka-connect:8083
